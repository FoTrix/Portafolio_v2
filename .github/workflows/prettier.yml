name: Format with Prettier

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write
  workflows: write

jobs:
  format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        # Checkout PR head_ref if available, otherwise the commit that triggered the workflow
        ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: Format with Prettier
      run: bunx prettier . --write
      
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and Push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      env:
        GH_EVENT_NAME: ${{ github.event_name }}
        GH_HEAD_REF: ${{ github.head_ref }}
        GH_REF_NAME: ${{ github.ref_name }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-format code with Prettier"
        
        BRANCH_TO_PUSH=""
        if [ "$GH_EVENT_NAME" = "pull_request" ]; then
          if [ -z "$GH_HEAD_REF" ]; then
            echo "::warning:: GITHUB_HEAD_REF is not available for this pull_request event. Cannot push to PR branch."
          else
            BRANCH_TO_PUSH="$GH_HEAD_REF"
          fi
        elif [ "$GH_EVENT_NAME" = "push" ]; then
          BRANCH_TO_PUSH="$GH_REF_NAME"
        else
          echo "::error:: Unknown event type: $GH_EVENT_NAME. Cannot determine branch to push."
          exit 1
        fi

        if [ -z "$BRANCH_TO_PUSH" ]; then
          echo "::error:: Could not determine a valid branch to push to. Skipping push and exiting with error."
          exit 1
        fi
        
        echo "Attempting to push to branch: $BRANCH_TO_PUSH"
        git push origin HEAD:"refs/heads/$BRANCH_TO_PUSH"